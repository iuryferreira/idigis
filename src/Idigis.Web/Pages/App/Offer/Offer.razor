@page "/offer"
@layout AppLayout
@using Idigis.Web.Pages.App.Offer.Components
@using Idigis.Web.States
@inherits BlazorStateComponent

<div class="container">
    <div class="columns is-inline-mobile">
        <div class="column has-text-centered-mobile">
            <AddButton Text="Adicionar Oferta"/>
        </div>
        <div class="column">
            <p class="has-text-right has-text-centered-mobile has-text-weight-bold">Ofertas do mês: @State.TotalOffersInMonth R$</p>
        </div>
    </div>
    <div class="columns">
        <div class="column mb-6">
            <div class="table-container">
                <table class="table is-fullwidth is-hoverable has-text-centered">
                    <thead>
                    <tr>
                        <th>Valor</th>
                        <th>Data</th>
                        <th>Ações</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var offer in State.Offers)
                    {
                        <tr>
                            <th>@offer.Value R$</th>
                            <td>20/04/2021</td>
                            <td>
                                <a class="button is-warning is-small">
                                    <span class="icon is-small is-left">
                                        <i class="fas fa-pen"></i>
                                    </span>
                                </a>
                                <button class="button is-danger is-small" @onclick="() => HandleDeleteButton(offer.Id)">
                                    <span class="icon is-small is-left">
                                        <i class="fas fa-eraser"></i>
                                    </span>
                                </button>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<CascadingValue Value="this">
    <AddOfferModal/>
    <DeleteOfferModal/>
</CascadingValue>

@code {
    OfferState State => Store.GetState<OfferState>();

    protected override async Task OnInitializedAsync()
    {
        await Mediator.Send(new ChurchState.LoadStateAction());
        await Mediator.Send(new OfferState.LoadOffersAction());
    }
    
    private async Task HandleDeleteButton(string id)
    {
        await Mediator.Send(new OfferState.ToggleModalAction("Delete", id));
    }

    public void Refresh()
    {
        StateHasChanged();
    }

}